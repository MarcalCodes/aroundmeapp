# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: 'Backend'

      # See https://blog.jetbrains.com/idea/2022/12/http-client-cli-run-requests-and-tests-on-ci/
      - name: Install Jetbrains HTTP client
        run: |
          curl -f -L -o ijhttp.zip "https://jb.gg/ijhttp/latest" 
          
          # Comes from https://askubuntu.com/a/86852
          unzip ijhttp.zip
          mv ijhttp/ijhttp Backend/ijhttp
          mv ijhttp/lib Backend/lib
          
          cd Backend
          ls -al

      # See https://github.com/marketplace/actions/docker-compose-action
      - name: Start DB
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          # Description: Path to compose file(s). It can be a list of files. It can be
          # absolute or relative to the current working directory (cwd).
          #
          # Default: ./docker-compose.yml
          compose-file: "./Backend/docker-compose.yml"

      - name: Start application
        run: |
          cd Backend
          npm i
          npm run db_migrate
          npm run server_ci &
          sleep 2

      # See https://blog.jetbrains.com/idea/2022/12/http-client-cli-run-requests-and-tests-on-ci/#running-requests-from-the-terminal
      - name: Run integration tests
        run: |
          cd Backend
          ./ijhttp login_tests.http
